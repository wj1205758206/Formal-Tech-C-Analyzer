[kernel] Parsing tests/spec/permut.c (with preprocessing)
/* Generated by Frama-C */
/*@
axiomatic Permut {
  predicate permut{L1, L2}(double t1[], double t2[], ℤ n) ;
  
  axiom permut_refl{L}: ∀ double t[], ℤ n; permut{L, L}(t, t, n);
  
  axiom permut_sym{L1, L2}:
    ∀ double t1[], double t2[], ℤ n;
      permut{L1, L2}(t1, t2, n) ⇒ permut{L2, L1}(t2, t1, n);
  
  axiom permut_trans{L1, L2, L3}:
    ∀ double t1[], double t2[], double t3[], ℤ n;
      permut{L1, L2}(t1, t2, n) ∧ permut{L2, L3}(t2, t3, n) ⇒
      permut{L1, L3}(t1, t3, n);
  
  axiom permut_exchange{L1, L2}:
    ∀ double t1[], double t2[], ℤ i, ℤ j, ℤ n;
      \at(t1[i],L1) ≡ \at(t2[j],L2) ∧ \at(t1[j],L1) ≡ \at(t2[i],L2) ∧
      (∀ ℤ k;
         0 ≤ k < n ∧ k ≢ i ∧ k ≢ j ⇒
         \at(t1[k],L1) ≡ \at(t2[k],L2)) ⇒
      permut{L1, L2}(t1, t2, n);
  
  }
 */


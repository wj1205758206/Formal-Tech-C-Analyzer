[kernel] Parsing tests/syntax/incompatible_qualifiers.c (with preprocessing)
/* Generated by Frama-C */
typedef int (*fp1)(char );
typedef int *iptr;
typedef int * __restrict irptr;
int f(int a, char volatile *b);

int g(int a, char b);

void h(char const *);

void i(int *(*f)(int volatile ));

void j(int *(*f)(int *));

void k(int *(*f)(int volatile ));

fp1 *l(int *(*f)(int ));

int (***m(int *(*f)(int volatile )))(char const );

fp1 * const *n(int *(*f)(int , fp1 **));

void o(char r1, char r2);

void p(int volatile a);

void q(iptr volatile p);

void r(int (*f)(char ), int (*g)(char ));

void s(irptr p1, irptr p2);

int * __restrict * __restrict iprpr;
int * __restrict matrix[1];
int main(void)
{
  int __retres;
  f(0,(char volatile *)0);
  g(0,(char)0);
  h((char const *)0);
  i((int *(*)(int volatile ))0);
  j((int *(*)(int *))0);
  k((int *(*)(int volatile ))0);
  l((int *(*)(int ))0);
  m((int *(*)(int volatile ))0);
  n((int *(*)(int , fp1 **))0);
  o((char)0,(char)0);
  p(0);
  q((int *)0);
  r((int (*)(char ))0,(int (*)(char ))0);
  s((int *)0,(int *)0);
  __retres = 0;
  return __retres;
}


